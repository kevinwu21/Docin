import{_ as a,c as e,o as s,a as n}from"./app.82736834.js";const _=JSON.parse('{"title":"col","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]}]}],"relativePath":"linux/command/pages/col.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/col.md"},r=n(`<h1 id="col" tabindex="-1">col <a class="header-anchor" href="#col" aria-hidden="true">#</a></h1><p>过滤控制字符</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>col命令</strong> 是一个标准输入文本过滤器，它从标注输入设备读取文本内容，并把内容显示到标注输出设备。在许多UNIX说明文件里，都有RLF控制字符。当我们运用shell特殊字符<code>&gt;</code>和<code>&gt;&gt;</code>，把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col命令则能有效滤除这些控制字符。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">col(选项</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-b：过滤掉所有的控制字符，包括RLF和HRLF；</span></span>
<span class="line"><span style="color:#FFCB6B;">-f：滤掉RLF字符，但允许将HRLF字符呈现出来；</span></span>
<span class="line"><span style="color:#FFCB6B;">-x：以多个空格字符来表示跳格字符；</span></span>
<span class="line"><span style="color:#FFCB6B;">-l&lt;缓冲区列数&gt;：预设的内存缓冲区有128列，用户可以自行指定缓冲区的大小。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,8),c=[r];function t(i,o,p,d,h,u){return s(),e("div",null,c)}const b=a(l,[["render",t]]);export{_ as __pageData,b as default};
