import{_ as s,c as a,o as e,a as n}from"./app.82736834.js";const b=JSON.parse('{"title":"wait","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/wait.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/wait.md"},p=n(`<h1 id="wait" tabindex="-1">wait <a class="header-anchor" href="#wait" aria-hidden="true">#</a></h1><p>等待进程执行完后返回</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>wait命令</strong> 用来等待指令的指令，直到其执行完毕后返回终端。该指令常用于shell脚本编程中，待指定的指令执行完成后，才会继续执行后面的任务。该指令等待作业时，在作业标识号前必须添加百分号&quot;%&quot;。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">wait</span><span style="color:#FFCB6B;">(参数</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>进程或作业标示：指定进程号或者作业号。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><p>使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：</p><p>运行一个sleep进程</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sleep</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">10s</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&amp;</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">27156</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>指定作业号</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">wait</span><span style="color:#EEFFFF;"> %1       </span><span style="color:#545454;font-style:italic;">#等待作业号为1的作业完成 </span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">+  Done                    sleep 10s</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>指定进程号</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">wait</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">27156</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">+  Done                    sleep 10s</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>输出当前存在作业号的指令，如下所示：</p><p><a href="./jobs.html">jobs</a></p>`,18),t=[p];function r(i,o,c,d,h,F){return e(),a("div",null,t)}const m=s(l,[["render",r]]);export{b as __pageData,m as default};
