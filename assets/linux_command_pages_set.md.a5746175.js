import{_ as s,c as a,o as n,a as l}from"./app.82736834.js";const y=JSON.parse('{"title":"set","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/set.md","lastUpdated":1666509709000}'),e={name:"linux/command/pages/set.md"},p=l(`<h1 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-hidden="true">#</a></h1><p>显示或设置shell特性及shell变量</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>set命令</strong> 作用主要是显示系统中已经存在的shell变量，以及设置shell变量的新变量值。使用set更改shell特性时，符号&quot;+&quot;和&quot;-&quot;的作用分别是打开和关闭指定的模式。set命令不能够定义新的shell变量。如果要定义新的变量，可以使用declare命令以<code>变量名=值</code>的格式进行定义即可。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#FFCB6B;">(选项</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-a：标示已修改的变量，以供输出至环境变量。</span></span>
<span class="line"><span style="color:#FFCB6B;">-b：使被中止的后台程序立刻回报执行状态。</span></span>
<span class="line"><span style="color:#FFCB6B;">-C：转向所产生的文件无法覆盖已存在的文件。</span></span>
<span class="line"><span style="color:#FFCB6B;">-d：Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。</span></span>
<span class="line"><span style="color:#FFCB6B;">-e：若指令传回值不等于0，则立即退出shell。</span></span>
<span class="line"><span style="color:#FFCB6B;">-f：取消使用通配符。</span></span>
<span class="line"><span style="color:#FFCB6B;">-h：自动记录函数的所在位置。</span></span>
<span class="line"><span style="color:#FFCB6B;">-H</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">Shell：可利用</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">加</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">指令编</span><span style="color:#EEFFFF;">号</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">的方式来执行history中记录的指令。</span></span>
<span class="line"><span style="color:#FFCB6B;">-k：指令所给的参数都会被视为此指令的环境变量。</span></span>
<span class="line"><span style="color:#FFCB6B;">-l：记录for循环的变量名称。</span></span>
<span class="line"><span style="color:#FFCB6B;">-m：使用监视模式。</span></span>
<span class="line"><span style="color:#FFCB6B;">-n：只读取指令，而不实际执行。</span></span>
<span class="line"><span style="color:#FFCB6B;">-p：启动优先顺序模式。</span></span>
<span class="line"><span style="color:#FFCB6B;">-P：启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。</span></span>
<span class="line"><span style="color:#FFCB6B;">-t：执行完随后的指令，即退出shell。</span></span>
<span class="line"><span style="color:#FFCB6B;">-u：当执行时使用到未定义过的变量，则显示错误信息。</span></span>
<span class="line"><span style="color:#FFCB6B;">-v：显示shell所读取的输入值。</span></span>
<span class="line"><span style="color:#FFCB6B;">-x：执行指令后，会先显示该指令及所下的参数。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>取消某个set曾启动的参数。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><p>使用declare命令定义一个新的环境变量&quot;mylove&quot;，并且将其值设置为&quot;Visual C++&quot;，输入如下命令：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#EEFFFF;"> mylove</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Visual C++</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;">   </span><span style="color:#545454;font-style:italic;">#定义新环境变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再使用set命令将新定义的变量输出为环境变量，输入如下命令：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">set</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">mylove</span><span style="color:#EEFFFF;">                 </span><span style="color:#545454;font-style:italic;">#设置为环境变量</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行该命令后，将会新添加对应的环境变量。用户可以使用env命令和grep命令分别显示和搜索环境变量&quot;mylove&quot;，输入命令如下：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">env</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">mylove</span><span style="color:#EEFFFF;">             </span><span style="color:#545454;font-style:italic;">#显示环境变量值</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时，该命令执行后，将输出查询到的环境变量值。</p>`,18),r=[p];function o(t,c,i,d,F,u){return n(),a("div",null,r)}const b=s(e,[["render",o]]);export{y as __pageData,b as default};
