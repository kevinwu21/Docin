import{_ as s,c as a,o as e,a as n}from"./app.82736834.js";const m=JSON.parse('{"title":"reboot","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/reboot.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/reboot.md"},r=n(`<h1 id="reboot" tabindex="-1">reboot <a class="header-anchor" href="#reboot" aria-hidden="true">#</a></h1><p>重新启动正在运行的Linux操作系统</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>reboot命令</strong> 用来重新启动正在运行的Linux操作系统。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">reboot(选项</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-d：重新开机时不把数据写入记录文件/var/tmp/wtmp。本参数具有“-n”参数效果；</span></span>
<span class="line"><span style="color:#FFCB6B;">-f：强制重新开机，不调用shutdown指令的功能；</span></span>
<span class="line"><span style="color:#FFCB6B;">-i：在重开机之前，先关闭所有网络界面；</span></span>
<span class="line"><span style="color:#FFCB6B;">-n：重开机之前不检查是否有未结束的程序；</span></span>
<span class="line"><span style="color:#FFCB6B;">-w：仅做测试，并不真正将系统重新开机，只会把重开机的数据写入/var/log目录下的wtmp记录文件。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">reboot</span><span style="color:#EEFFFF;">        </span><span style="color:#C3E88D;">//重开机。</span></span>
<span class="line"><span style="color:#FFCB6B;">reboot</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-w</span><span style="color:#EEFFFF;">     </span><span style="color:#C3E88D;">//做个重开机的模拟（只有纪录并不会真的重开机）。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,10),p=[r];function t(o,i,c,d,h,b){return e(),a("div",null,p)}const F=s(l,[["render",t]]);export{m as __pageData,F as default};
