import{_ as s,c as n,o as a,a as e}from"./app.82736834.js";const b=JSON.parse('{"title":"yes","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/yes.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/yes.md"},p=e(`<h1 id="yes" tabindex="-1">yes <a class="header-anchor" href="#yes" aria-hidden="true">#</a></h1><p>重复打印指定字符串</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>yes命令</strong> 在命令行中输出指定的字符串，直到yes进程被杀死。不带任何参数输入yes命令默认的字符串就是y。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">yes(参数</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>字符串：指定要重复打印的字符串。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">root@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;"># yes testline</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#FFCB6B;">testline</span></span>
<span class="line"><span style="color:#82AAFF;">..</span><span style="color:#FFCB6B;">.一直重复打印</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">testline，按Ctrl+C结束。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,10),r=[p];function t(i,c,o,d,h,F){return a(),n("div",null,r)}const y=s(l,[["render",t]]);export{b as __pageData,y as default};
