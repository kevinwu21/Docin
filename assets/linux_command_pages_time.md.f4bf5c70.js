import{_ as s,c as a,o as e,a as n}from"./app.82736834.js";const y=JSON.parse('{"title":"time","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/time.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/time.md"},t=n(`<h1 id="time" tabindex="-1">time <a class="header-anchor" href="#time" aria-hidden="true">#</a></h1><p>统计给定命令所花费的总时间</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>time命令</strong> 用于统计给定命令所花费的总时间。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">time</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>指令：指定需要运行的额指令及其参数。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><p>当测试一个程序或比较不同算法时，执行时间是非常重要的，一个好的算法应该是用时最短的。所有类UNIX系统都包含time命令，使用这个命令可以统计时间消耗。例如：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">root@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;"># </span><span style="color:#F78C6C;">time</span><span style="color:#EEFFFF;"> ls</span></span>
<span class="line"><span style="color:#FFCB6B;">anaconda-ks.cfg</span><span style="color:#EEFFFF;">  </span><span style="color:#C3E88D;">install.log</span><span style="color:#EEFFFF;">  </span><span style="color:#C3E88D;">install.log.syslog</span><span style="color:#EEFFFF;">  </span><span style="color:#C3E88D;">satools</span><span style="color:#EEFFFF;">  </span><span style="color:#C3E88D;">text</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">real</span><span style="color:#EEFFFF;">    </span><span style="color:#C3E88D;">0m0.009s</span></span>
<span class="line"><span style="color:#FFCB6B;">user</span><span style="color:#EEFFFF;">    </span><span style="color:#C3E88D;">0m0.002s</span></span>
<span class="line"><span style="color:#FFCB6B;">sys</span><span style="color:#EEFFFF;">     </span><span style="color:#C3E88D;">0m0.007s</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>输出的信息分别显示了该命令所花费的real时间、user时间和sys时间。</p><ul><li>real时间是指挂钟时间，也就是命令开始执行到结束的时间。这个短时间包括其他进程所占用的时间片，和进程被阻塞时所花费的时间。</li><li>user时间是指进程花费在用户模式中的CPU时间，这是唯一真正用于执行进程所花费的时间，其他进程和花费阻塞状态中的时间没有计算在内。</li><li>sys时间是指花费在内核模式中的CPU时间，代表在内核中执系统调用所花费的时间，这也是真正由进程使用的CPU时间。</li></ul><p>shell内建也有一个time命令，当运行time时候是调用的系统内建命令，应为系统内建的功能有限，所以需要时间其他功能需要使用time命令可执行二进制文件<code>/usr/bin/time</code>。</p><p>使用<code>-o</code>选项将执行时间写入到文件中：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">/usr/bin/time</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">outfile.txt</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用<code>-a</code>选项追加信息：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">/usr/bin/time</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">outfile.txt</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>使用<code>-f</code>选项格式化时间输出：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">/usr/bin/time</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">time: %U</span><span style="color:#89DDFF;">&quot;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>-f</code>选项后的参数：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>%E</code></td><td>real时间，显示格式为[小时:]分钟:秒</td></tr><tr><td><code>%U</code></td><td>user时间。</td></tr><tr><td><code>%S</code></td><td>sys时间。</td></tr><tr><td><code>%C</code></td><td>进行计时的命令名称和命令行参数。</td></tr><tr><td><code>%D</code></td><td>进程非共享数据区域，以KB为单位。</td></tr><tr><td><code>%x</code></td><td>命令退出状态。</td></tr><tr><td><code>%k</code></td><td>进程接收到的信号数量。</td></tr><tr><td><code>%w</code></td><td>进程被交换出主存的次数。</td></tr><tr><td><code>%Z</code></td><td>系统的页面大小，这是一个系统常量，不用系统中常量值也不同。</td></tr><tr><td><code>%P</code></td><td>进程所获取的CPU时间百分百，这个值等于 <code>user+system</code> 时间除以总共的运行时间。</td></tr><tr><td><code>%K</code></td><td>进程的平均总内存使用量（data+stack+text），单位是 <code>KB</code>。</td></tr><tr><td><code>%w</code></td><td>进程主动进行上下文切换的次数，例如等待I/O操作完成。</td></tr><tr><td><code>%c</code></td><td>进程被迫进行上下文切换的次数（由于时间片到期）。</td></tr></tbody></table>`,22),o=[t];function p(r,d,c,i,F,h){return e(),a("div",null,o)}const m=s(l,[["render",p]]);export{y as __pageData,m as default};
