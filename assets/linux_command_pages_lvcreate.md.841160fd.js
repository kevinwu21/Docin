import{_ as e,c as a,o as s,a as l}from"./app.82736834.js";const F=JSON.parse('{"title":"lvcreate","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/lvcreate.md","lastUpdated":1666509709000}'),n={name:"linux/command/pages/lvcreate.md"},t=l(`<h1 id="lvcreate" tabindex="-1">lvcreate <a class="header-anchor" href="#lvcreate" aria-hidden="true">#</a></h1><p>用于创建LVM的逻辑卷</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>lvcreate命令</strong> 用于创建LVM的逻辑卷。逻辑卷是创建在卷组之上的。逻辑卷对应的设备文件保存在卷组目录下，例如：在卷组&quot;vg1000&quot;上创建一个逻辑卷&quot;lvol0&quot;，则此逻辑卷对应的设备文件为&quot;/dev/vg1000/lvol0&quot;。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">lvcreate(选项</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节；</span></span>
<span class="line"><span style="color:#FFCB6B;">-l：指定逻辑卷的大小（LE数）。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>逻辑卷：指定要创建的逻辑卷名称。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><p>使用lvcreate命令在卷组&quot;vg1000&quot;上创建一个200MB的逻辑卷。在命令行中输入下面的命令：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">root@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;"># lvcreate -L 200M vg1000    </span><span style="color:#545454;font-style:italic;">#创建大小为200M的逻辑卷</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>输出信息如下：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Logical</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">volume</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">lvol0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">created</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>说明：创建成功后，新的逻辑卷&quot;lvol0&quot;，将通过设备文件<code>/dev/vg1000/lvol0</code>进行访问。</p>`,16),r=[t];function o(p,c,i,d,h,u){return s(),a("div",null,r)}const m=e(n,[["render",o]]);export{F as __pageData,m as default};
