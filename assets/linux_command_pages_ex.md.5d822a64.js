import{_ as e,c as a,o as s,a as n}from"./app.82736834.js";const x=JSON.parse('{"title":"ex","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]}]}],"relativePath":"linux/command/pages/ex.md","lastUpdated":1666509709000}'),i={name:"linux/command/pages/ex.md"},t=n(`<h1 id="ex" tabindex="-1">ex <a class="header-anchor" href="#ex" aria-hidden="true">#</a></h1><p>启动vim编辑器的ex编辑模式</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p>在 <strong>ex</strong> 模式下启动vim文本编辑器。ex执行效果如同<code>vi -E</code>，适用于法及参数可参照vi指令，如要从Ex模式回到普通模式，则在vim中输入<code>:vi</code>或<code>:visual</code>即可。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ex（参数）</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>文件：指定待编辑的文件。</p>`,8),r=[t];function d(l,c,o,h,p,_){return s(),a("div",null,r)}const m=e(i,[["render",d]]);export{x as __pageData,m as default};
