import{_ as s,c as a,o as n,a as e}from"./app.82736834.js";const m=JSON.parse('{"title":"iptstate","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]}]}],"relativePath":"linux/command/pages/iptstate.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/iptstate.md"},p=e(`<h1 id="iptstate" tabindex="-1">iptstate <a class="header-anchor" href="#iptstate" aria-hidden="true">#</a></h1><p>显示iptables的工作状态</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>iptstate命令</strong> 以top指令类似的风格时显示Linux内核中iptables的工作状态。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">iptstate(选项</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-b：指定输出信息的排序规则；</span></span>
<span class="line"><span style="color:#FFCB6B;">-d：不动态地改变窗口大小；</span></span>
<span class="line"><span style="color:#FFCB6B;">-f：过滤本地回送信息；</span></span>
<span class="line"><span style="color:#FFCB6B;">-l：将ip地址解析为域名；</span></span>
<span class="line"><span style="color:#FFCB6B;">-L：隐藏于DNS查询相关状态；</span></span>
<span class="line"><span style="color:#FFCB6B;">-r：指定刷新屏幕的频率；</span></span>
<span class="line"><span style="color:#FFCB6B;">-R：反序排列；</span></span>
<span class="line"><span style="color:#FFCB6B;">-s：单次运行模式；</span></span>
<span class="line"><span style="color:#FFCB6B;">-t：显示汇总信息。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>`,8),t=[p];function i(r,c,o,d,h,b){return n(),a("div",null,t)}const _=s(l,[["render",i]]);export{m as __pageData,_ as default};
