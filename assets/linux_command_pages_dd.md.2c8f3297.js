import{_ as s,c as n,o as a,a as l}from"./app.82736834.js";const D=JSON.parse('{"title":"dd","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/dd.md","lastUpdated":1666509709000}'),p={name:"linux/command/pages/dd.md"},e=l(`<h1 id="dd" tabindex="-1">dd <a class="header-anchor" href="#dd" aria-hidden="true">#</a></h1><p>复制文件并对原文件的内容进行转换和格式化处理</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>dd命令</strong> 用于复制文件并对原文件的内容进行转换和格式化处理。dd命令功能很强大的，对于一些比较底层的问题，使用dd命令往往可以得到出人意料的效果。用的比较多的还是用dd来备份裸设备。但是不推荐，如果需要备份oracle裸设备，可以使用rman备份，或使用第三方软件备份，使用dd的话，管理起来不太方便。</p><p>建议在有需要的时候使用dd 对物理磁盘操作，如果是文件系统的话还是使用tar backup cpio等其他命令更加方便。另外，使用dd对磁盘操作时，最好使用块设备文件。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">dd(选项</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">bs</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">字节</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：将ibs（输入）与obs（输出）设成指定的字节数；</span></span>
<span class="line"><span style="color:#EEFFFF;">cbs</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">字节</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：转换时，每次只转换指定的字节数；</span></span>
<span class="line"><span style="color:#EEFFFF;">conv</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">关键</span><span style="color:#EEFFFF;">字</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：指定文件转换的方式；</span></span>
<span class="line"><span style="color:#EEFFFF;">count</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">区块</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：仅读取指定的区块数；</span></span>
<span class="line"><span style="color:#EEFFFF;">ibs</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">字节</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：每次读取的字节数；</span></span>
<span class="line"><span style="color:#EEFFFF;">obs</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">字节</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：每次输出的字节数；</span></span>
<span class="line"><span style="color:#EEFFFF;">of</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">文</span><span style="color:#EEFFFF;">件</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：输出到文件；</span></span>
<span class="line"><span style="color:#EEFFFF;">seek</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">区块</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：一开始输出时，跳过指定的区块数；</span></span>
<span class="line"><span style="color:#EEFFFF;">skip</span><span style="color:#89DDFF;">=&lt;</span><span style="color:#C3E88D;">区块</span><span style="color:#EEFFFF;">数</span><span style="color:#89DDFF;">&gt;</span><span style="color:#C3E88D;">：一开始读取时，跳过指定的区块数；</span></span>
<span class="line"><span style="color:#FFCB6B;">--help：帮助；</span></span>
<span class="line"><span style="color:#FFCB6B;">--version：显示版本信息。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">root@localhost text</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"># dd if</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/dev/zero</span><span style="color:#EEFFFF;"> of</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">sun.txt</span><span style="color:#EEFFFF;"> bs</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">1M</span><span style="color:#EEFFFF;"> count</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#EEFFFF;"> records </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#EEFFFF;"> records out</span></span>
<span class="line"><span style="color:#F78C6C;">1048576</span><span style="color:#EEFFFF;"> bytes </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#EEFFFF;"> MB</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> copied, </span><span style="color:#F78C6C;">0.006107</span><span style="color:#EEFFFF;"> seconds, </span><span style="color:#F78C6C;">172</span><span style="color:#EEFFFF;"> MB/s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">root@localhost text</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"># du -sh sun.txt </span></span>
<span class="line"><span style="color:#EEFFFF;">1.1M    sun.txt</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>该命令创建了一个1M大小的文件sun.txt，其中参数解释：</p><ul><li><strong>if</strong> 代表输入文件。如果不指定if，默认就会从stdin中读取输入。</li><li><strong>of</strong> 代表输出文件。如果不指定of，默认就会将stdout作为默认输出。</li><li><strong>bs</strong> 代表字节为单位的块大小。</li><li><strong>count</strong> 代表被复制的块数。</li><li><strong>/dev/zero</strong> 是一个字符设备，会不断返回0值字节（\\0）。</li></ul><p>块大小可以使用的计量单位表</p><table><thead><tr><th>单元大小</th><th>代码</th></tr></thead><tbody><tr><td>字节（1B）</td><td>c</td></tr><tr><td>字节（2B）</td><td>w</td></tr><tr><td>块（512B）</td><td>b</td></tr><tr><td>千字节（1024B）</td><td>k</td></tr><tr><td>兆字节（1024KB）</td><td>M</td></tr><tr><td>吉字节（1024MB）</td><td>G</td></tr></tbody></table><p>以上命令可以看出dd命令来测试内存操作速度：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#F78C6C;">1048576</span><span style="color:#EEFFFF;"> bytes </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1.0</span><span style="color:#EEFFFF;"> MB</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> copied, </span><span style="color:#F78C6C;">0.006107</span><span style="color:#EEFFFF;"> seconds, </span><span style="color:#F78C6C;">172</span><span style="color:#EEFFFF;"> MB/s</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>生成随机字符串</strong></p><p>我们甚至可以使用 /dev/urandom 设备配合 dd 命令 来获取随机字符串。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">root@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;"># dd if</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/dev/urandom</span><span style="color:#EEFFFF;"> bs</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> count</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">15</span><span style="color:#89DDFF;">|</span><span style="color:#C3E88D;">base64</span><span style="color:#EEFFFF;"> -w </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#EEFFFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#EEFFFF;"> records </span><span style="color:#89DDFF;font-style:italic;">in</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#EEFFFF;">+</span><span style="color:#F78C6C;">0</span><span style="color:#EEFFFF;"> records out</span></span>
<span class="line"><span style="color:#F78C6C;">15</span><span style="color:#EEFFFF;"> bytes </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">15</span><span style="color:#EEFFFF;"> B</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> copied, </span><span style="color:#F78C6C;">0.000111993</span><span style="color:#EEFFFF;"> s, </span><span style="color:#F78C6C;">134</span><span style="color:#EEFFFF;"> kB/s</span></span>
<span class="line"><span style="color:#FFCB6B;">wFRAnlkXeBXmWs1MyGEs</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,20),o=[e];function t(r,F,c,i,d,y){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{D as __pageData,b as default};
