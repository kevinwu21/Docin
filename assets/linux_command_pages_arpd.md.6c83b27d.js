import{_ as a,c as s,o as e,a as n}from"./app.82736834.js";const F=JSON.parse('{"title":"arpd","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/arpd.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/arpd.md"},p=n(`<h1 id="arpd" tabindex="-1">arpd <a class="header-anchor" href="#arpd" aria-hidden="true">#</a></h1><p>收集免费ARP信息</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>arpd命令</strong> 是用来收集免费arp信息的一个守护进程，它将收集到的信息保存在磁盘上或者在需要时，提供给内核用户用于避免多余广播。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">arpd(选项</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-l：将arp数据库输出到标准输出设备显示并退出；</span></span>
<span class="line"><span style="color:#FFCB6B;">-f：指定读取和加载arpd数据库的文本文件，文件的格式与“-l”输出信息类似；</span></span>
<span class="line"><span style="color:#FFCB6B;">-b：指定arpd数据库文件，默认的位置为“/var/lib/arpd.db”；</span></span>
<span class="line"><span style="color:#FFCB6B;">-a：指定目标被认为死掉前查询的次数；</span></span>
<span class="line"><span style="color:#FFCB6B;">-k：禁止通过内核发送广播查询；</span></span>
<span class="line"><span style="color:#FFCB6B;">-n：设定缓冲失效时间。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>网络接口：指定网络接口。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><p>启动arpd进程：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">arpd</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/var/tmp/arpd.db</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行一段时间后，查看结果：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">arpd</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-l</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-b</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/var/tmp/arpd.db</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15),r=[p];function i(t,d,c,o,h,b){return e(),s("div",null,r)}const m=a(l,[["render",i]]);export{F as __pageData,m as default};
