import{_ as s,c as n,o as a,a as l}from"./app.82736834.js";const b=JSON.parse('{"title":"awk","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[]},{"level":2,"title":"awk命令格式和选项","slug":"awk命令格式和选项","link":"#awk命令格式和选项","children":[]},{"level":2,"title":"awk模式和操作","slug":"awk模式和操作","link":"#awk模式和操作","children":[{"level":3,"title":"模式","slug":"模式","link":"#模式","children":[]},{"level":3,"title":"操作","slug":"操作","link":"#操作","children":[]}]},{"level":2,"title":"awk脚本基本结构","slug":"awk脚本基本结构","link":"#awk脚本基本结构","children":[{"level":3,"title":"awk的工作原理","slug":"awk的工作原理","link":"#awk的工作原理","children":[]}]},{"level":2,"title":"awk内置变量（预定义变量）","slug":"awk内置变量-预定义变量","link":"#awk内置变量-预定义变量","children":[]},{"level":2,"title":"将外部变量值传递给awk","slug":"将外部变量值传递给awk","link":"#将外部变量值传递给awk","children":[]},{"level":2,"title":"查找进程pid","slug":"查找进程pid","link":"#查找进程pid","children":[]},{"level":2,"title":"awk运算与判断","slug":"awk运算与判断","link":"#awk运算与判断","children":[{"level":3,"title":"算术运算符","slug":"算术运算符","link":"#算术运算符","children":[]},{"level":3,"title":"赋值运算符","slug":"赋值运算符","link":"#赋值运算符","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]},{"level":3,"title":"正则运算符","slug":"正则运算符","link":"#正则运算符","children":[]},{"level":3,"title":"关系运算符","slug":"关系运算符","link":"#关系运算符","children":[]},{"level":3,"title":"其它运算符","slug":"其它运算符","link":"#其它运算符","children":[]},{"level":3,"title":"运算级优先级表","slug":"运算级优先级表","link":"#运算级优先级表","children":[]}]},{"level":2,"title":"awk高级输入输出","slug":"awk高级输入输出","link":"#awk高级输入输出","children":[{"level":3,"title":"读取下一条记录","slug":"读取下一条记录","link":"#读取下一条记录","children":[]},{"level":3,"title":"简单地读取一条记录","slug":"简单地读取一条记录","link":"#简单地读取一条记录","children":[]},{"level":3,"title":"关闭文件","slug":"关闭文件","link":"#关闭文件","children":[]},{"level":3,"title":"输出到一个文件","slug":"输出到一个文件","link":"#输出到一个文件","children":[]}]},{"level":2,"title":"设置字段定界符","slug":"设置字段定界符","link":"#设置字段定界符","children":[]},{"level":2,"title":"流程控制语句","slug":"流程控制语句","link":"#流程控制语句","children":[{"level":3,"title":"条件判断语句","slug":"条件判断语句","link":"#条件判断语句","children":[]},{"level":3,"title":"循环语句","slug":"循环语句","link":"#循环语句","children":[]},{"level":3,"title":"# while语句","slug":"while语句","link":"#while语句","children":[]},{"level":3,"title":"# for循环","slug":"for循环","link":"#for循环","children":[]},{"level":3,"title":"# do循环","slug":"do循环","link":"#do循环","children":[]},{"level":3,"title":"其他语句","slug":"其他语句","link":"#其他语句","children":[]}]},{"level":2,"title":"数组应用","slug":"数组应用","link":"#数组应用","children":[{"level":3,"title":"数组的定义","slug":"数组的定义","link":"#数组的定义","children":[]},{"level":3,"title":"数组相关函数","slug":"数组相关函数","link":"#数组相关函数","children":[]},{"level":3,"title":"二维、多维数组使用","slug":"二维、多维数组使用","link":"#二维、多维数组使用","children":[]}]},{"level":2,"title":"内置函数","slug":"内置函数","link":"#内置函数","children":[{"level":3,"title":"算术函数","slug":"算术函数","link":"#算术函数","children":[]},{"level":3,"title":"字符串函数","slug":"字符串函数","link":"#字符串函数","children":[]},{"level":3,"title":"一般函数","slug":"一般函数","link":"#一般函数","children":[]},{"level":3,"title":"时间函数","slug":"时间函数","link":"#时间函数","children":[]}]}],"relativePath":"linux/command/pages/awk.md","lastUpdated":1666509709000}'),p={name:"linux/command/pages/awk.md"},e=l(`<h1 id="awk" tabindex="-1">awk <a class="header-anchor" href="#awk" aria-hidden="true">#</a></h1><p>文本和数据进行处理的编程语言</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>awk</strong> 是一种编程语言，用于在linux/unix下对文本和数据进行处理。数据可以来自标准输入(stdin)、一个或多个文件，或其它命令的输出。它支持用户自定义函数和动态正则表达式等先进功能，是linux/unix下的一个强大编程工具。它在命令行中使用，但更多是作为脚本来使用。awk有很多内建的功能，比如数组、函数等，这是它和C语言的相同之处，灵活性是awk最大的优势。</p><h2 id="awk命令格式和选项" tabindex="-1">awk命令格式和选项 <a class="header-anchor" href="#awk命令格式和选项" aria-hidden="true">#</a></h2><p><strong>语法形式</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">options</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">script</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">var=value</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">options</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">scriptfile</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">var=value</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">s</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>常用命令选项</strong></p><ul><li><strong>-F fs</strong> fs指定输入分隔符，fs可以是字符串或正则表达式，如-F:，默认的分隔符是连续的空格或制表符</li><li><strong>-v var=value</strong> 赋值一个用户定义变量，将外部变量传递给awk</li><li><strong>-f scripfile</strong> 从脚本文件中读取awk命令</li><li><strong>-m[fr] val</strong> 对val值设置内在限制，-mf选项限制分配给val的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。</li></ul><h2 id="awk模式和操作" tabindex="-1">awk模式和操作 <a class="header-anchor" href="#awk模式和操作" aria-hidden="true">#</a></h2><p>awk脚本是由模式和操作组成的。</p><h3 id="模式" tabindex="-1">模式 <a class="header-anchor" href="#模式" aria-hidden="true">#</a></h3><p>模式可以是以下任意一个：</p><ul><li>/正则表达式/：使用通配符的扩展集。</li><li>关系表达式：使用运算符进行操作，可以是字符串或数字的比较测试。</li><li>模式匹配表达式：用运算符<code>~</code>（匹配）和<code>!~</code>（不匹配）。</li><li>BEGIN语句块、pattern语句块、END语句块：参见awk的工作原理</li></ul><h3 id="操作" tabindex="-1">操作 <a class="header-anchor" href="#操作" aria-hidden="true">#</a></h3><p>操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：</p><ul><li>变量或数组赋值</li><li>输出命令</li><li>内置函数</li><li>控制流语句</li></ul><h2 id="awk脚本基本结构" tabindex="-1">awk脚本基本结构 <a class="header-anchor" href="#awk脚本基本结构" aria-hidden="true">#</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ print &quot;start&quot; } pattern{ commands } END{ print &quot;end&quot; }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">file</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>一个awk脚本通常由：BEGIN语句块、能够使用模式匹配的通用语句块、END语句块3部分组成，这三个部分是可选的。任意一个部分都可以不出现在脚本中，脚本通常是被 <strong>单引号</strong> 中，例如：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ i=0 } { i++ } END{ print i }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">filename</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="awk的工作原理" tabindex="-1">awk的工作原理 <a class="header-anchor" href="#awk的工作原理" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ commands } pattern{ commands } END{ commands }</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>第一步：执行<code>BEGIN{ commands }</code>语句块中的语句；</li><li>第二步：从文件或标准输入(stdin)读取一行，然后执行<code>pattern{ commands }</code>语句块，它逐行扫描文件，从第一行到最后一行重复这个过程，直到文件全部被读取完毕。</li><li>第三步：当读至输入流末尾时，执行<code>END{ commands }</code>语句块。</li></ul><p><strong>BEGIN语句块</strong> 在awk开始从输入流中读取行 <strong>之前</strong> 被执行，这是一个可选的语句块，比如变量初始化、打印输出表格的表头等语句通常可以写在BEGIN语句块中。</p><p><strong>END语句块</strong> 在awk从输入流中读取完所有的行 <strong>之后</strong> 即被执行，比如打印所有行的分析结果这类信息汇总都是在END语句块中完成，它也是一个可选语句块。</p><p><strong>pattern语句块</strong> 中的通用命令是最重要的部分，它也是可选的。如果没有提供pattern语句块，则默认执行<code>{ print }</code>，即打印每一个读取到的行，awk读取的每一行都会执行该语句块。</p><p><strong>示例</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">A line 1\\nA line 2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ print &quot;Start&quot; } { print } END{ print &quot;End&quot; }</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">Start</span></span>
<span class="line"><span style="color:#FFCB6B;">A</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">line</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#FFCB6B;">A</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">line</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#FFCB6B;">End</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>当使用不带参数的<code>print</code>时，它就打印当前行，当<code>print</code>的参数是以逗号进行分隔时，打印时则以空格作为定界符。在awk的print语句块中双引号是被当作拼接符使用，例如：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ var1=&quot;v1&quot;; var2=&quot;v2&quot;; var3=&quot;v3&quot;; print var1,var2,var3; }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">v1</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">v2</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">v3</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>双引号拼接使用：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ var1=&quot;v1&quot;; var2=&quot;v2&quot;; var3=&quot;v3&quot;; print var1&quot;=&quot;var2&quot;=&quot;var3; }</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#EEFFFF;">v1</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">v2=v3</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>{ }类似一个循环体，会对文件中的每一行进行迭代，通常变量初始化语句（如：i=0）以及打印文件头部的语句放入BEGIN语句块中，将打印的结果等语句放在END语句块中。</p><h2 id="awk内置变量-预定义变量" tabindex="-1">awk内置变量（预定义变量） <a class="header-anchor" href="#awk内置变量-预定义变量" aria-hidden="true">#</a></h2><p>说明：[A][N][P][G]表示第一个支持变量的工具，[A]=awk、[N]=nawk、[P]=POSIXawk、[G]=gawk</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">**</span><span style="color:#EEFFFF;">$n</span><span style="color:#FFCB6B;">**</span><span style="color:#EEFFFF;">  </span><span style="color:#C3E88D;">当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">**</span><span style="color:#EEFFFF;font-style:italic;">$0</span><span style="color:#FFCB6B;">**</span><span style="color:#EEFFFF;">  </span><span style="color:#C3E88D;">这个变量包含执行过程中当前行的文本内容。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">N</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">ARGC</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  命令行参数的数目。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">G</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">ARGIND</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  命令行中当前文件的位置（从0开始算）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">N</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">ARGV</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  包含命令行参数的数组。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">G</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">CONVFMT</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  数字转换格式（默认值为%.6g）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">P</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">ENVIRON</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  环境变量关联数组。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">N</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">ERRNO</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  最后一个系统错误的描述。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">G</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">FIELDWIDTHS</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  字段宽度列表（用空格键分隔）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">FILENAME</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  当前输入文件的名。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">P</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">FNR</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  同NR，但相对于当前文件。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">FS</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  字段分隔符（默认是任何空格）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">G</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">IGNORECASE</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  如果为真，则进行忽略大小写的匹配。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">NF</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  表示字段数，在执行过程中对应于当前的字段数。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">NR</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  表示记录数，在执行过程中对应于当前的行号。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">OFMT</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  数字的输出格式（默认值是%.6g）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">OFS</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  输出字段分隔符（默认值是一个空格）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">ORS</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  输出记录分隔符（默认值是一个换行符）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">A</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">RS</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  记录分隔符（默认是一个换行符）。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">N</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">RSTART</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  由match函数所匹配的字符串的第一个位置。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">N</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">RLENGTH</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  由match函数所匹配的字符串的长度。</span></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">N</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">SUBSEP</span><span style="color:#89DDFF;">**</span><span style="color:#EEFFFF;">  数组下标分隔符（默认值是34）。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>转义序列</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">\\\\ \\自身</span></span>
<span class="line"><span style="color:#EEFFFF;">\\$ 转义$</span></span>
<span class="line"><span style="color:#EEFFFF;">\\t 制表符</span></span>
<span class="line"><span style="color:#EEFFFF;">\\b 退格符</span></span>
<span class="line"><span style="color:#EEFFFF;">\\r 回车符</span></span>
<span class="line"><span style="color:#EEFFFF;">\\n 换行符</span></span>
<span class="line"><span style="color:#EEFFFF;">\\c 取消换行</span></span>
<span class="line"><span style="color:#EEFFFF;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>示例</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">line1 f2 f3\\nline2 f4 f5\\nline3 f6 f7</span><span style="color:#89DDFF;">&quot;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{print &quot;Line No:&quot;NR&quot;, No of fields:&quot;NF, &quot;$0=&quot;$0, &quot;$1=&quot;$1, &quot;$2=&quot;$2, &quot;$3=&quot;$3}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">Line</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">No:</span><span style="color:#F78C6C;">1</span><span style="color:#C3E88D;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">No</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">of</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">fields:</span><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$0</span><span style="color:#C3E88D;">=line1</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">f2</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">f3</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$1</span><span style="color:#C3E88D;">=line1</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$2</span><span style="color:#C3E88D;">=f2</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$3</span><span style="color:#C3E88D;">=f3</span></span>
<span class="line"><span style="color:#FFCB6B;">Line</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">No:</span><span style="color:#F78C6C;">2</span><span style="color:#C3E88D;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">No</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">of</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">fields:</span><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$0</span><span style="color:#C3E88D;">=line2</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">f4</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">f5</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$1</span><span style="color:#C3E88D;">=line2</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$2</span><span style="color:#C3E88D;">=f4</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$3</span><span style="color:#C3E88D;">=f5</span></span>
<span class="line"><span style="color:#FFCB6B;">Line</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">No:</span><span style="color:#F78C6C;">3</span><span style="color:#C3E88D;">,</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">No</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">of</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">fields:</span><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$0</span><span style="color:#C3E88D;">=line3</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">f6</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">f7</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$1</span><span style="color:#C3E88D;">=line3</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$2</span><span style="color:#C3E88D;">=f6</span><span style="color:#EEFFFF;"> </span><span style="color:#EEFFFF;font-style:italic;">$3</span><span style="color:#C3E88D;">=f7</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>使用<code>print $NF</code>可以打印出一行中的最后一个字段，使用<code>$(NF-1)</code>则是打印倒数第二个字段，其他以此类推：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">line1 f2 f3\\n line2 f4 f5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{print $NF}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">f3</span></span>
<span class="line"><span style="color:#FFCB6B;">f5</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">line1 f2 f3\\n line2 f4 f5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{print $(NF-1)}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">f2</span></span>
<span class="line"><span style="color:#FFCB6B;">f4</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>打印每一行的第二和第三个字段：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print $2,$3 }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">filename</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>统计文件中的行数：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">END{ print NR }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">filename</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>以上命令只使用了END语句块，在读入每一行的时，awk会将NR更新为对应的行号，当到达最后一行NR的值就是最后一行的行号，所以END语句块中的NR就是文件的行数。</p><p>一个每一行中第一个字段值累加的例子：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">seq</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">5</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ sum=0; print &quot;总和：&quot; } { print $1&quot;+&quot;; sum+=$1 } END{ print &quot;等于&quot;; print sum }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">总和：</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;">+</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#EEFFFF;">+</span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;">+</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;">+</span></span>
<span class="line"><span style="color:#F78C6C;">5</span><span style="color:#EEFFFF;">+</span></span>
<span class="line"><span style="color:#FFCB6B;">等于</span></span>
<span class="line"><span style="color:#F78C6C;">15</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="将外部变量值传递给awk" tabindex="-1">将外部变量值传递给awk <a class="header-anchor" href="#将外部变量值传递给awk" aria-hidden="true">#</a></h2><p>借助 <strong><code>-v</code>选项</strong> ，可以将外部值（并非来自stdin）传递给awk：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">VAR</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">10000</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-v</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">VARIABLE=</span><span style="color:#EEFFFF;">$VAR </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print VARIABLE }</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>另一种传递外部变量方法：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">var1</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">aaa</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#EEFFFF;">var2</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bbb</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print v1,v2 }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">v1=</span><span style="color:#EEFFFF;">$var1 </span><span style="color:#C3E88D;">v2=</span><span style="color:#EEFFFF;">$var2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>当输入来自于文件时使用：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print v1,v2 }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">v1=</span><span style="color:#EEFFFF;">$var1 </span><span style="color:#C3E88D;">v2=</span><span style="color:#EEFFFF;">$var2 </span><span style="color:#C3E88D;">filename</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>以上方法中，变量之间用空格分隔作为awk的命令行参数跟随在BEGIN、{}和END语句块之后。</p><h2 id="查找进程pid" tabindex="-1">查找进程pid <a class="header-anchor" href="#查找进程pid" aria-hidden="true">#</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">netstat</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-antup</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">grep</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">7770</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print $NF NR}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print $1}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="awk运算与判断" tabindex="-1">awk运算与判断 <a class="header-anchor" href="#awk运算与判断" aria-hidden="true">#</a></h2><p>作为一种程序设计语言所应具有的特点之一，awk支持多种运算，这些运算与C语言提供的基本相同。awk还提供了一系列内置的运算函数（如log、sqr、cos、sin等）和一些用于对字符串进行操作（运算）的函数（如length、substr等等）。这些函数的引用大大的提高了awk的运算功能。作为对条件转移指令的一部分，关系判断是每种程序设计语言都具备的功能，awk也不例外，awk中允许进行多种测试，作为样式匹配，还提供了模式匹配表达式~（匹配）和!~（不匹配）。作为对测试的一种扩充，awk也支持用逻辑运算符。</p><h3 id="算术运算符" tabindex="-1">算术运算符 <a class="header-anchor" href="#算术运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>+ -</td><td>加，减</td></tr><tr><td>* / &amp;</td><td>乘，除与求余</td></tr><tr><td>+ - !</td><td>一元加，减和逻辑非</td></tr><tr><td>^ ***</td><td>求幂</td></tr><tr><td>++ --</td><td>增加或减少，作为前缀或后缀</td></tr></tbody></table><p>例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{a=&quot;b&quot;;print a++,++a;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">0</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意：所有用作算术运算符进行操作，操作数自动转为数值，所有非数值都变为0</p><h3 id="赋值运算符" tabindex="-1">赋值运算符 <a class="header-anchor" href="#赋值运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>= += -= *= /= %= ^= **=</td><td>赋值语句</td></tr></tbody></table><p>例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">a</span><span style="color:#89DDFF;">+=</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">等价于：a=a+5</span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">其它同类</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="逻辑运算符" tabindex="-1">逻辑运算符 <a class="header-anchor" href="#逻辑运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td><code>||</code></td><td>逻辑或</td></tr><tr><td>&amp;&amp;</td><td>逻辑与</td></tr></tbody></table><p>例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{a=1;b=2;print (a&gt;5 &amp;&amp; b&lt;=2),(a&gt;5 || b&lt;=2);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">0</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="正则运算符" tabindex="-1">正则运算符 <a class="header-anchor" href="#正则运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>~ !~</td><td>匹配正则表达式和不匹配正则表达式</td></tr></tbody></table><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">^ 行首</span></span>
<span class="line"><span style="color:#EEFFFF;">$ 行尾</span></span>
<span class="line"><span style="color:#EEFFFF;">. 除了换行符以外的任意单个字符</span></span>
<span class="line"><span style="color:#EEFFFF;">* 前导字符的零个或多个</span></span>
<span class="line"><span style="color:#EEFFFF;">.* 所有字符</span></span>
<span class="line"><span style="color:#EEFFFF;">[] 字符组内的任一字符</span></span>
<span class="line"><span style="color:#EEFFFF;">[^]对字符组内的每个字符取反(不匹配字符组内的每个字符)</span></span>
<span class="line"><span style="color:#EEFFFF;">^[^] 非字符组内的字符开头的行</span></span>
<span class="line"><span style="color:#EEFFFF;">[a-z] 小写字母</span></span>
<span class="line"><span style="color:#EEFFFF;">[A-Z] 大写字母</span></span>
<span class="line"><span style="color:#EEFFFF;">[a-Z] 小写和大写字母</span></span>
<span class="line"><span style="color:#EEFFFF;">[0-9] 数字</span></span>
<span class="line"><span style="color:#EEFFFF;">\\&lt; 单词头单词一般以空格或特殊字符做分隔,连续的字符串被当做单词</span></span>
<span class="line"><span style="color:#EEFFFF;">\\&gt; 单词尾</span></span>
<span class="line"><span style="color:#EEFFFF;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p>正则需要用 /正则/ 包围住</p></blockquote><p>例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{a=&quot;100testa&quot;;if(a ~ /^100*/){print &quot;ok&quot;;}}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">ok</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="关系运算符" tabindex="-1">关系运算符 <a class="header-anchor" href="#关系运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>&lt; &lt;= &gt; &gt;= != ==</td><td>关系运算符</td></tr></tbody></table><p>例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{a=11;if(a &gt;= 9){print &quot;ok&quot;;}}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">ok</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意：&gt; &lt; 可以作为字符串比较，也可以用作数值比较，关键看操作数如果是字符串就会转换为字符串比较。两个都为数字才转为数值比较。字符串比较：按照ASCII码顺序比较。</p><h3 id="其它运算符" tabindex="-1">其它运算符 <a class="header-anchor" href="#其它运算符" aria-hidden="true">#</a></h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>$</td><td>字段引用</td></tr><tr><td>空格</td><td>字符串连接符</td></tr><tr><td>?:</td><td>C条件表达式</td></tr><tr><td>in</td><td>数组中是否存在某键值</td></tr></tbody></table><p>例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{a=&quot;b&quot;;print a==&quot;b&quot;?&quot;ok&quot;:&quot;err&quot;;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">ok</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{a=&quot;b&quot;;arr[0]=&quot;b&quot;;arr[1]=&quot;c&quot;;print (a in arr);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">awk &#39;BEGIN{a=&quot;b&quot;;arr[0]=&quot;b&quot;;arr[&quot;b&quot;]=&quot;c&quot;;print (a in arr);}&#39;</span></span>
<span class="line"><span style="color:#EEFFFF;">1</span></span>
<span class="line"><span style="color:#EEFFFF;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="运算级优先级表" tabindex="-1">运算级优先级表 <a class="header-anchor" href="#运算级优先级表" aria-hidden="true">#</a></h3><p>!级别越高越优先<br> 级别越高越优先</p><h2 id="awk高级输入输出" tabindex="-1">awk高级输入输出 <a class="header-anchor" href="#awk高级输入输出" aria-hidden="true">#</a></h2><h3 id="读取下一条记录" tabindex="-1">读取下一条记录 <a class="header-anchor" href="#读取下一条记录" aria-hidden="true">#</a></h3><p>awk中<code>next</code>语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。next语句一般用于多行合并：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">text.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span></span>
<span class="line"><span style="color:#FFCB6B;">b</span></span>
<span class="line"><span style="color:#FFCB6B;">c</span></span>
<span class="line"><span style="color:#FFCB6B;">d</span></span>
<span class="line"><span style="color:#FFCB6B;">e</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">NR%2==1{next}{print NR,$0;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">text.txt</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#EEFFFF;"> b</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;"> d</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>当记录行号除以2余1，就跳过当前行。下面的<code>print NR,$0</code>也不会执行。下一行开始，程序有开始判断<code>NR%2</code>值。这个时候记录行号是<code>：2</code> ，就会执行下面语句块：<code>&#39;print NR,$0&#39;</code></p><p>分析发现需要将包含有“web”行进行跳过，然后需要将内容与下面行合并为一行：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">text.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">web01[192.168.2.100</span><span style="color:#EEFFFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">httpd</span><span style="color:#EEFFFF;">            </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">tomcat</span><span style="color:#EEFFFF;">               </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">sendmail</span><span style="color:#EEFFFF;">               </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web02[192.168.2.101</span><span style="color:#EEFFFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">httpd</span><span style="color:#EEFFFF;">            </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">postfix</span><span style="color:#EEFFFF;">               </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web03[192.168.2.102</span><span style="color:#EEFFFF;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">mysqld</span><span style="color:#EEFFFF;">            </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#FFCB6B;">httpd</span><span style="color:#EEFFFF;">               </span><span style="color:#C3E88D;">ok</span></span>
<span class="line"><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/^web/{T=$0;next;}{print T&quot;:&quot;t,$0;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">text.txt</span></span>
<span class="line"><span style="color:#FFCB6B;">web01[192.168.2.100</span><span style="color:#EEFFFF;">]:   httpd            ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web01[192.168.2.100</span><span style="color:#EEFFFF;">]:   tomcat               ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web01[192.168.2.100</span><span style="color:#EEFFFF;">]:   sendmail               ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web02[192.168.2.101</span><span style="color:#EEFFFF;">]:   httpd            ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web02[192.168.2.101</span><span style="color:#EEFFFF;">]:   postfix               ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web03[192.168.2.102</span><span style="color:#EEFFFF;">]:   mysqld            ok</span></span>
<span class="line"><span style="color:#FFCB6B;">web03[192.168.2.102</span><span style="color:#EEFFFF;">]:   httpd               ok</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="简单地读取一条记录" tabindex="-1">简单地读取一条记录 <a class="header-anchor" href="#简单地读取一条记录" aria-hidden="true">#</a></h3><p><code>awk getline</code>用法：输出重定向需用到<code>getline函数</code>。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。</p><p>getline语法：getline var，变量var包含了特定行的内容。</p><p>awk getline从整体上来说，用法说明：</p><ul><li><strong>当其左右无重定向符<code>|</code>或<code>&lt;</code>时：</strong> getline作用于当前文件，读入当前文件的第一行给其后跟的变量<code>var</code>或<code>$0</code>（无变量），应该注意到，由于awk在处理getline之前已经读入了一行，所以getline得到的返回结果是隔行的。</li><li><strong>当其左右有重定向符<code>|</code>或<code>&lt;</code>时：</strong> getline则作用于定向输入文件，由于该文件是刚打开，并没有被awk读入一行，只是getline读入，那么getline返回的是该文件的第一行，而不是隔行。</li></ul><p><strong>示例：</strong></p><p>执行linux的<code>date</code>命令，并通过管道输出给<code>getline</code>，然后再把输出赋值给自定义变量out，并打印它：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ &quot;date&quot; | getline out; print out }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>执行shell的date命令，并通过管道输出给getline，然后getline从管道中读取并将输入赋值给out，split函数把变量out转化成数组mon，然后打印数组mon的第二个元素：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ &quot;date&quot; | getline out; split(out,mon); print mon[2] }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">test</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>命令ls的输出传递给geline作为输入，循环使getline从ls的输出中读取一行，并把它打印到屏幕。这里没有输入文件，因为BEGIN块在打开输入文件前执行，所以可以忽略输入文件。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ while( &quot;ls&quot; | getline) print }</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="关闭文件" tabindex="-1">关闭文件 <a class="header-anchor" href="#关闭文件" aria-hidden="true">#</a></h3><p>awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">close(&quot;filename&quot;</span><span style="color:#EEFFFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>filename可以是getline打开的文件，也可以是stdin，包含文件名的变量或者getline使用的确切命令。或一个输出文件，可以是stdout，包含文件名的变量或使用管道的确切命令。</p><h3 id="输出到一个文件" tabindex="-1">输出到一个文件 <a class="header-anchor" href="#输出到一个文件" aria-hidden="true">#</a></h3><p>awk中允许用如下方式将结果输出到一个文件：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{printf(&quot;hello word!n&quot;) &gt; &quot;datafile&quot;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#545454;font-style:italic;"># 或</span></span>
<span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{printf(&quot;hello word!n&quot;) &gt;&gt; &quot;datafile&quot;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="设置字段定界符" tabindex="-1">设置字段定界符 <a class="header-anchor" href="#设置字段定界符" aria-hidden="true">#</a></h2><p>默认的字段定界符是空格，可以使用<code>-F &quot;定界符&quot;</code> 明确指定一个定界符：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-F:</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">{ print $NF }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/etc/passwd</span></span>
<span class="line"><span style="color:#545454;font-style:italic;"># 或</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ FS=&quot;:&quot; } { print $NF }</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/etc/passwd</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在<code>BEGIN语句块</code>中则可以用<code>OFS=“定界符”</code>设置输出字段的定界符。</p><h2 id="流程控制语句" tabindex="-1">流程控制语句 <a class="header-anchor" href="#流程控制语句" aria-hidden="true">#</a></h2><p>在linux awk的while、do-while和for语句中允许使用break,continue语句来控制流程走向，也允许使用exit这样的语句来退出。break中断当前正在执行的循环并跳到循环外执行下一条语句。if 是流程选择用法。awk中，流程控制语句，语法结构，与c语言类型。有了这些语句，其实很多shell程序都可以交给awk，而且性能是非常快的。下面是各个语句用法。</p><h3 id="条件判断语句" tabindex="-1">条件判断语句 <a class="header-anchor" href="#条件判断语句" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">表达式</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#FFCB6B;">语句1</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#FFCB6B;">语句2</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>格式中语句1可以是多个语句，为了方便判断和阅读，最好将多个语句用{}括起来。awk分枝结构允许嵌套，其格式为：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">表达式</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#EEFFFF;"> if</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">表达式</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句2</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句3</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>示例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{</span></span>
<span class="line"><span style="color:#C3E88D;">test=100;</span></span>
<span class="line"><span style="color:#C3E88D;">if(test&gt;90){</span></span>
<span class="line"><span style="color:#C3E88D;">  print &quot;very good&quot;;</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">  else if(test&gt;60){</span></span>
<span class="line"><span style="color:#C3E88D;">    print &quot;good&quot;;</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">  else{</span></span>
<span class="line"><span style="color:#C3E88D;">    print &quot;no pass&quot;;</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">very</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">good</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>每条命令语句后面可以用<code>;</code> <strong>分号</strong> 结尾。</p><h3 id="循环语句" tabindex="-1">循环语句 <a class="header-anchor" href="#循环语句" aria-hidden="true">#</a></h3><h3 id="while语句" tabindex="-1"># while语句 <a class="header-anchor" href="#while语句" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">while</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">表达式</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>示例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{</span></span>
<span class="line"><span style="color:#C3E88D;">test=100;</span></span>
<span class="line"><span style="color:#C3E88D;">total=0;</span></span>
<span class="line"><span style="color:#C3E88D;">while(i&lt;=test){</span></span>
<span class="line"><span style="color:#C3E88D;">  total+=i;</span></span>
<span class="line"><span style="color:#C3E88D;">  i++;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#C3E88D;">print total;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="for循环" tabindex="-1"># for循环 <a class="header-anchor" href="#for循环" aria-hidden="true">#</a></h3><p>for循环有两种格式：</p><p>格式1：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">for</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">变量</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">in</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">数组</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>示例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{</span></span>
<span class="line"><span style="color:#C3E88D;">for(k in ENVIRON){</span></span>
<span class="line"><span style="color:#C3E88D;">  print k&quot;=&quot;ENVIRON[k];</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#EEFFFF;">TERM</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">linux</span></span>
<span class="line"><span style="color:#EEFFFF;">G_BROKEN_FILENAMES</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#EEFFFF;">SHLVL</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#EEFFFF;">pwd</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/root/text</span></span>
<span class="line"><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#EEFFFF;">logname</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">root</span></span>
<span class="line"><span style="color:#EEFFFF;">HOME</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/root</span></span>
<span class="line"><span style="color:#EEFFFF;">SSH_CLIENT</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">192.168.1.21</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">53087</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">22</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>注：ENVIRON是awk常量，是子典型数组。</p><p>格式2：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">for</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">变量</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">条件</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">表达式</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#EEFFFF;">  </span><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>示例：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{</span></span>
<span class="line"><span style="color:#C3E88D;">total=0;</span></span>
<span class="line"><span style="color:#C3E88D;">for(i=0;i&lt;=100;i++){</span></span>
<span class="line"><span style="color:#C3E88D;">  total+=i;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#C3E88D;">print total;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="do循环" tabindex="-1"># do循环 <a class="header-anchor" href="#do循环" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#FFCB6B;">语句</span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;"> while</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">条件</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>例子：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{ </span></span>
<span class="line"><span style="color:#C3E88D;">total=0;</span></span>
<span class="line"><span style="color:#C3E88D;">i=0;</span></span>
<span class="line"><span style="color:#C3E88D;">do {total+=i;i++;} while(i&lt;=100)</span></span>
<span class="line"><span style="color:#C3E88D;">  print total;</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">5050</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="其他语句" tabindex="-1">其他语句 <a class="header-anchor" href="#其他语句" aria-hidden="true">#</a></h3><ul><li><strong>break</strong> 当 break 语句用于 while 或 for 语句时，导致退出程序循环。</li><li><strong>continue</strong> 当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。</li><li><strong>next</strong> 能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。</li><li><strong>exit</strong> 语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。</li></ul><h2 id="数组应用" tabindex="-1">数组应用 <a class="header-anchor" href="#数组应用" aria-hidden="true">#</a></h2><p>数组是awk的灵魂，处理文本中最不能少的就是它的数组处理。因为数组索引（下标）可以是数字和字符串在awk中数组叫做关联数组(associative arrays)。awk 中的数组不必提前声明，也不必声明大小。数组元素用0或空字符串来初始化，这根据上下文而定。</p><h3 id="数组的定义" tabindex="-1">数组的定义 <a class="header-anchor" href="#数组的定义" aria-hidden="true">#</a></h3><p>数字做数组索引（下标）：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Array[1</span><span style="color:#EEFFFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sun</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">Array[2</span><span style="color:#EEFFFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">kai</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>字符串做数组索引（下标）：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Array[&quot;first&quot;</span><span style="color:#EEFFFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">www</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">Array&quot;[last&quot;</span><span style="color:#EEFFFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#FFCB6B;">Array[&quot;birth&quot;</span><span style="color:#EEFFFF;">]=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1987</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>使用中<code>print Array[1]</code>会打印出sun；使用<code>print Array[2]</code>会打印出kai；使用<code>print[&quot;birth&quot;]</code>会得到1987。</p><p><strong>读取数组的值</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#EEFFFF;"> for</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">item</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">in</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">array</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">print</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">array[item]}</span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">       </span><span style="color:#545454;font-style:italic;">#输出的顺序是随机的</span></span>
<span class="line"><span style="color:#89DDFF;">{</span><span style="color:#EEFFFF;"> for</span><span style="color:#89DDFF;">(</span><span style="color:#EEFFFF;">i</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">i&lt;=len</span><span style="color:#89DDFF;">;</span><span style="color:#FFCB6B;">i++</span><span style="color:#89DDFF;">)</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">{</span><span style="color:#82AAFF;">print</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">array[i]}</span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">}</span><span style="color:#EEFFFF;">         </span><span style="color:#545454;font-style:italic;">#Len是数组的长度</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="数组相关函数" tabindex="-1">数组相关函数 <a class="header-anchor" href="#数组相关函数" aria-hidden="true">#</a></h3><p><strong>得到数组长度：</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;it is a test&quot;;lens=split(info,tA,&quot; &quot;);print length(tA),lens;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">4</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>length返回字符串以及数组长度，split进行分割字符串为数组，也会返回分割得到数组长度。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;it is a test&quot;;split(info,tA,&quot; &quot;);print asort(tA);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">4</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>asort对数组进行排序，返回数组长度。</p><p><strong>输出数组内容（无序，有序输出）：</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;it is a test&quot;;split(info,tA,&quot; &quot;);for(k in tA){print k,tA[k];}}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;"> test</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> it</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#EEFFFF;"> is</span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> a </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>for…in</code>输出，因为数组是关联数组，默认是无序的。所以通过<code>for…in</code>得到是无序的数组。如果需要得到有序数组，需要通过下标获得。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;it is a test&quot;;tlen=split(info,tA,&quot; &quot;);for(k=1;k&lt;=tlen;k++){print k,tA[k];}}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> it</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#EEFFFF;"> is</span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> a</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;"> test</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>注意：数组下标是从1开始，与C数组不一样。</p><p><strong>判断键值存在以及删除键值：</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#545454;font-style:italic;"># 错误的判断方法：</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{tB[&quot;a&quot;]=&quot;a1&quot;;tB[&quot;b&quot;]=&quot;b1&quot;;if(tB[&quot;c&quot;]!=&quot;1&quot;){print &quot;no found&quot;;};for(k in tB){print k,tB[k];}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#FFCB6B;">no</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">found</span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">a1</span></span>
<span class="line"><span style="color:#FFCB6B;">b</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">b1</span></span>
<span class="line"><span style="color:#FFCB6B;">c</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>以上出现奇怪问题，<code>tB[“c”]</code>没有定义，但是循环时候，发现已经存在该键值，它的值为空，这里需要注意，awk数组是关联数组，只要通过数组引用它的key，就会自动创建改序列。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#545454;font-style:italic;"># 正确判断方法：</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{tB[&quot;a&quot;]=&quot;a1&quot;;tB[&quot;b&quot;]=&quot;b1&quot;;if( &quot;c&quot; in tB){print &quot;ok&quot;;};for(k in tB){print k,tB[k];}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;">  </span></span>
<span class="line"><span style="color:#FFCB6B;">a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">a1</span></span>
<span class="line"><span style="color:#FFCB6B;">b</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">b1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>if(key in array)</code>通过这种方法判断数组中是否包含<code>key</code>键值。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#545454;font-style:italic;">#删除键值：</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{tB[&quot;a&quot;]=&quot;a1&quot;;tB[&quot;b&quot;]=&quot;b1&quot;;delete tB[&quot;a&quot;];for(k in tB){print k,tB[k];}}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;">                     </span></span>
<span class="line"><span style="color:#FFCB6B;">b</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">b1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>delete array[key]</code>可以删除，对应数组<code>key</code>的，序列值。</p><h3 id="二维、多维数组使用" tabindex="-1">二维、多维数组使用 <a class="header-anchor" href="#二维、多维数组使用" aria-hidden="true">#</a></h3><p>awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，<code>array[2,4]=1</code>这样的访问是允许的。awk使用一个特殊的字符串<code>SUBSEP(�34)</code>作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2�344。</p><p>类似一维数组的成员测试，多维数组可以使用<code>if ( (i,j) in array)</code>这样的语法，但是下标必须放置在圆括号中。类似一维数组的循环访问，多维数组使用<code>for ( item in array )</code>这样的语法遍历数组。与一维数组不同的是，多维数组必须使用<code>split()</code>函数来访问单独的下标分量。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{</span></span>
<span class="line"><span style="color:#C3E88D;">for(i=1;i&lt;=9;i++){</span></span>
<span class="line"><span style="color:#C3E88D;">  for(j=1;j&lt;=9;j++){</span></span>
<span class="line"><span style="color:#C3E88D;">    tarr[i,j]=i*j; print i,&quot;*&quot;,j,&quot;=&quot;,tarr[i,j];</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">2</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">4</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">5</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">6</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">6</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#82AAFF;">...</span></span>
<span class="line"><span style="color:#F78C6C;">9</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">6</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">54</span></span>
<span class="line"><span style="color:#F78C6C;">9</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">7</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">63</span></span>
<span class="line"><span style="color:#F78C6C;">9</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">8</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">72</span></span>
<span class="line"><span style="color:#F78C6C;">9</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">9</span><span style="color:#EEFFFF;"> = </span><span style="color:#F78C6C;">81</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>可以通过<code>array[k,k2]</code>引用获得数组内容。</p><p>另一种方法：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{</span></span>
<span class="line"><span style="color:#C3E88D;">for(i=1;i&lt;=9;i++){</span></span>
<span class="line"><span style="color:#C3E88D;">  for(j=1;j&lt;=9;j++){</span></span>
<span class="line"><span style="color:#C3E88D;">    tarr[i,j]=i*j;</span></span>
<span class="line"><span style="color:#C3E88D;">  }</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#C3E88D;">for(m in tarr){</span></span>
<span class="line"><span style="color:#C3E88D;">  split(m,tarr2,SUBSEP); print tarr2[1],&quot;*&quot;,tarr2[2],&quot;=&quot;,tarr[m];</span></span>
<span class="line"><span style="color:#C3E88D;">}</span></span>
<span class="line"><span style="color:#C3E88D;">}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="内置函数" tabindex="-1">内置函数 <a class="header-anchor" href="#内置函数" aria-hidden="true">#</a></h2><p>awk内置函数，主要分以下3种类似：算数函数、字符串函数、其它一般函数、时间函数。</p><h3 id="算术函数" tabindex="-1">算术函数 <a class="header-anchor" href="#算术函数" aria-hidden="true">#</a></h3><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>atan2( y, x )</td><td>返回 y/x 的反正切。</td></tr><tr><td>cos( x )</td><td>返回 x 的余弦；x 是弧度。</td></tr><tr><td>sin( x )</td><td>返回 x 的正弦；x 是弧度。</td></tr><tr><td>exp( x )</td><td>返回 x 幂函数。</td></tr><tr><td>log( x )</td><td>返回 x 的自然对数。</td></tr><tr><td>sqrt( x )</td><td>返回 x 平方根。</td></tr><tr><td>int( x )</td><td>返回 x 的截断至整数的值。</td></tr><tr><td>rand( )</td><td>返回任意数字 n，其中 0 &lt;= n &lt; 1。</td></tr><tr><td>srand( [expr] )</td><td>将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。</td></tr></tbody></table><p>举例说明：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{OFMT=&quot;%.3f&quot;;fs=sin(1);fe=exp(10);fl=log(10);fi=int(3.1415);print fs,fe,fl,fi;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">0.841</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">22026.466</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">2.303</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>OFMT 设置输出数据格式是保留3位小数。</p><p>获得随机数：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{srand();fr=int(100*rand());print fr;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">78</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{srand();fr=int(100*rand());print fr;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">31</span></span>
<span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{srand();fr=int(100*rand());print fr;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">41</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="字符串函数" tabindex="-1">字符串函数 <a class="header-anchor" href="#字符串函数" aria-hidden="true">#</a></h3><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>gsub( Ere, Repl, [ In ] )</td><td>除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。</td></tr><tr><td>sub( Ere, Repl, [ In ] )</td><td>用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &amp;（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。</td></tr><tr><td>index( String1, String2 )</td><td>在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。</td></tr><tr><td>length [(String)]</td><td>返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。</td></tr><tr><td>blength [(String)]</td><td>返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。</td></tr><tr><td>substr( String, M, [ N ] )</td><td>返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。</td></tr><tr><td>match( String, Ere )</td><td>在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。</td></tr><tr><td>split( String, A, [Ere] )</td><td>将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。</td></tr><tr><td>tolower( String )</td><td>返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。</td></tr><tr><td>toupper( String )</td><td>返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。</td></tr><tr><td>sprintf(Format, Expr, Expr, . . . )</td><td>根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。</td></tr></tbody></table><p>注：Ere都可以是正则表达式。</p><p><strong>gsub,sub使用</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;this is a test2010test!&quot;;gsub(/[0-9]+/,&quot;!&quot;,info);print info}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">this</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">is</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">test!test!</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在 info中查找满足正则表达式，<code>/[0-9]+/</code> 用<code>””</code>替换，并且替换后的值，赋值给info 未给info值，默认是<code>$0</code></p><p><strong>查找字符串（index使用）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;this is a test2010test!&quot;;print index(info,&quot;test&quot;)?&quot;ok&quot;:&quot;no found&quot;;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">ok</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>未找到，返回0</p><p><strong>正则表达式匹配查找(match使用）</strong></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">awk &#39;BEGIN{info=&quot;this is a test2010test!&quot;;print match(info,/[0-9]+/)?&quot;ok&quot;:&quot;no found&quot;;}&#39;</span></span>
<span class="line"><span style="color:#EEFFFF;">ok</span></span>
<span class="line"><span style="color:#EEFFFF;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>截取字符串(substr使用）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">wangsl@centos5 </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ awk </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;this is a test2010test!&quot;;print substr(info,4,10);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">s</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">is</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">tes</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>从第 4个 字符开始，截取10个长度字符串</p><p><strong>字符串分割（split使用）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{info=&quot;this is a test&quot;;split(info,tA,&quot; &quot;);print length(tA);for(k in tA){print k,tA[k];}}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">4</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#EEFFFF;"> test</span></span>
<span class="line"><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> this</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#EEFFFF;"> is</span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#EEFFFF;"> a</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>分割info，动态创建数组tA，这里比较有意思，<code>awk for …in</code>循环，是一个无序的循环。 并不是从数组下标1…n ，因此使用时候需要注意。</p><p><strong>格式化字符串输出（sprintf使用）</strong></p><p>格式化字符串格式：</p><p>其中格式化字符串包括两部分内容：一部分是正常字符，这些字符将按原样输出; 另一部分是格式化规定字符，以<code>&quot;%&quot;</code>开始，后跟一个或几个规定字符,用来确定输出内容格式。</p><table><thead><tr><th>格式</th><th>描述</th><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>%d</td><td>十进制有符号整数</td><td>%u</td><td>十进制无符号整数</td></tr><tr><td>%f</td><td>浮点数</td><td>%s</td><td>字符串</td></tr><tr><td>%c</td><td>单个字符</td><td>%p</td><td>指针的值</td></tr><tr><td>%e</td><td>指数形式的浮点数</td><td>%x</td><td>%X 无符号以十六进制表示的整数</td></tr><tr><td>%o</td><td>无符号以八进制表示的整数</td><td>%g</td><td>自动选择合适的表示法</td></tr></tbody></table><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{n1=124.113;n2=-1.224;n3=1.2345; printf(&quot;%.2f,%.2u,%.2g,%X,%on&quot;,n1,n2,n3,n1,n1);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">124.11</span><span style="color:#EEFFFF;">,</span><span style="color:#F78C6C;">18446744073709551615</span><span style="color:#EEFFFF;">,</span><span style="color:#F78C6C;">1.2</span><span style="color:#EEFFFF;">,7C,</span><span style="color:#F78C6C;">174</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="一般函数" tabindex="-1">一般函数 <a class="header-anchor" href="#一般函数" aria-hidden="true">#</a></h3><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>close( Expression )</td><td>用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。</td></tr><tr><td>system(command )</td><td>执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。</td></tr><tr><td>Expression <code>|</code> getline [ Variable ]</td><td>从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。</td></tr><tr><td>getline [ Variable ] &lt; Expression</td><td>从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。</td></tr><tr><td>getline [ Variable ]</td><td>将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。</td></tr></tbody></table><p><strong>打开外部文件（close用法）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{while(&quot;cat /etc/passwd&quot;|getline){print $0;};close(&quot;/etc/passwd&quot;);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">root:x:0:0:root:/root:/bin/bash</span></span>
<span class="line"><span style="color:#FFCB6B;">bin:x:1:1:bin:/bin:/sbin/nologin</span></span>
<span class="line"><span style="color:#FFCB6B;">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>逐行读取外部文件(getline使用方法）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{while(getline &lt; &quot;/etc/passwd&quot;){print $0;};close(&quot;/etc/passwd&quot;);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">root:x:0:0:root:/root:/bin/bash</span></span>
<span class="line"><span style="color:#FFCB6B;">bin:x:1:1:bin:/bin:/sbin/nologin</span></span>
<span class="line"><span style="color:#FFCB6B;">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{print &quot;Enter your name:&quot;;getline name;print name;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">Enter</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">your</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">name:</span></span>
<span class="line"><span style="color:#FFCB6B;">chengmo</span></span>
<span class="line"><span style="color:#FFCB6B;">chengmo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>调用外部应用程序(system使用方法）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{b=system(&quot;ls -al&quot;);print b;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">total</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">42092</span></span>
<span class="line"><span style="color:#FFCB6B;">drwxr-xr-x</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">14</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">chengmo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">chengmo</span><span style="color:#EEFFFF;">     </span><span style="color:#F78C6C;">4096</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">09</span><span style="color:#C3E88D;">-</span><span style="color:#F78C6C;">30</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">17</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">47</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">drwxr-xr-x</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">95</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">root</span><span style="color:#EEFFFF;">   </span><span style="color:#C3E88D;">root</span><span style="color:#EEFFFF;">       </span><span style="color:#F78C6C;">4096</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">10</span><span style="color:#C3E88D;">-</span><span style="color:#F78C6C;">08</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">14</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">01</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">..</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>b返回值，是执行结果。</p><h3 id="时间函数" tabindex="-1">时间函数 <a class="header-anchor" href="#时间函数" aria-hidden="true">#</a></h3><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>函数名</td><td>说明</td></tr><tr><td>mktime( YYYY MM dd HH MM ss[ DST])</td><td>生成时间格式</td></tr><tr><td>strftime([format [, timestamp]])</td><td>格式化时间输出，将时间戳转为时间字符串具体格式，见下表。</td></tr><tr><td>systime()</td><td>得到时间戳，返回从1970年1月1日开始到当前时间(不计闰年)的整秒数</td></tr></tbody></table><p><strong>建指定时间(mktime使用）</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{tstamp=mktime(&quot;2001 01 01 12 12 12&quot;);print strftime(&quot;%c&quot;,tstamp);}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">2001年01月01日</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">星期一</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">12时12分12秒</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{tstamp1=mktime(&quot;2001 01 01 12 12 12&quot;);tstamp2=mktime(&quot;2001 02 01 0 0 0&quot;);print tstamp2-tstamp1;}</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#F78C6C;">2634468</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>求2个时间段中间时间差，介绍了strftime使用方法</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">awk</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">BEGIN{tstamp1=mktime(&quot;2001 01 01 12 12 12&quot;);tstamp2=systime();print tstamp2-tstamp1;}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span></span>
<span class="line"><span style="color:#F78C6C;">308201392</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>strftime日期和时间格式说明符</strong></p><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>%a</td><td>星期几的缩写(Sun)</td></tr><tr><td>%A</td><td>星期几的完整写法(Sunday)</td></tr><tr><td>%b</td><td>月名的缩写(Oct)</td></tr><tr><td>%B</td><td>月名的完整写法(October)</td></tr><tr><td>%c</td><td>本地日期和时间</td></tr><tr><td>%d</td><td>十进制日期</td></tr><tr><td>%D</td><td>日期 08/20/99</td></tr><tr><td>%e</td><td>日期，如果只有一位会补上一个空格</td></tr><tr><td>%H</td><td>用十进制表示24小时格式的小时</td></tr><tr><td>%I</td><td>用十进制表示12小时格式的小时</td></tr><tr><td>%j</td><td>从1月1日起一年中的第几天</td></tr><tr><td>%m</td><td>十进制表示的月份</td></tr><tr><td>%M</td><td>十进制表示的分钟</td></tr><tr><td>%p</td><td>12小时表示法(AM/PM)</td></tr><tr><td>%S</td><td>十进制表示的秒</td></tr><tr><td>%U</td><td>十进制表示的一年中的第几个星期(星期天作为一个星期的开始)</td></tr><tr><td>%w</td><td>十进制表示的星期几(星期天是0)</td></tr><tr><td>%W</td><td>十进制表示的一年中的第几个星期(星期一作为一个星期的开始)</td></tr><tr><td>%x</td><td>重新设置本地日期(08/20/99)</td></tr><tr><td>%X</td><td>重新设置本地时间(12:00:00)</td></tr><tr><td>%y</td><td>两位数字表示的年(99)</td></tr><tr><td>%Y</td><td>当前月份</td></tr><tr><td>%%</td><td>百分号(%)</td></tr></tbody></table>`,241),o=[e];function t(r,F,c,i,d,y){return a(),n("div",null,o)}const u=s(p,[["render",t]]);export{b as __pageData,u as default};
