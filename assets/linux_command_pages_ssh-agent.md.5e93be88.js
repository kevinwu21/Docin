import{_ as s,c as a,o as n,a as e}from"./app.82736834.js";const E=JSON.parse('{"title":"ssh-agent","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/ssh-agent.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/ssh-agent.md"},p=e(`<h1 id="ssh-agent" tabindex="-1">ssh-agent <a class="header-anchor" href="#ssh-agent" aria-hidden="true">#</a></h1><p>ssh密钥管理器</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>ssh-agent命令</strong> 是一种控制用来保存公钥身份验证所使用的私钥的程序。ssh-agent在X会话或登录会话之初启动，所有其他窗口或程序则以客户端程序的身份启动并加入到ssh-agent程序中。通过使用环境变量，可定位代理并在登录到其他使用ssh机器上时使用代理自动进行身份验证。</p><p>其实ssh-agent就是一个密钥管理器，运行ssh-agent以后，使用ssh-add将私钥交给ssh-agent保管，其他程序需要身份验证的时候可以将验证申请交给ssh-agent来完成整个认证过程。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ssh-agent</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">-c </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">-s]</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">-d</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">-a bind_address</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">-t life</span><span style="color:#89DDFF;">]</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">command </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">arg ...</span><span style="color:#89DDFF;">]]</span></span>
<span class="line"><span style="color:#FFCB6B;">ssh-agent</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">-c </span><span style="color:#89DDFF;">|</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">-s]</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-k</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-a</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">bind_address：bind</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">the</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">agent</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">to</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">the</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">UNIX-domain</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">socket</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">bind_address.</span></span>
<span class="line"><span style="color:#FFCB6B;">-c：生成C-shell风格的命令输出。</span></span>
<span class="line"><span style="color:#FFCB6B;">-d：调试模式。</span></span>
<span class="line"><span style="color:#FFCB6B;">-k：把ssh-agent进程杀掉。</span></span>
<span class="line"><span style="color:#FFCB6B;">-s：生成Bourne</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">shell</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">风格的命令输出。</span></span>
<span class="line"><span style="color:#FFCB6B;">-t</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">life：设置默认值添加到代理人的身份最大寿命。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><p>运行ssh-agent：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ssh-agent</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行ssh-agent，它会打印出来它使用的环境和变量。</p>`,13),o=[p];function t(r,F,c,i,d,h){return n(),a("div",null,o)}const u=s(l,[["render",t]]);export{E as __pageData,u as default};
