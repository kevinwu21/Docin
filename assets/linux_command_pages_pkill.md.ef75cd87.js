import{_ as s,c as a,o as n,a as l}from"./app.82736834.js";const m=JSON.parse('{"title":"pkill","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/pkill.md","lastUpdated":1666509709000}'),e={name:"linux/command/pages/pkill.md"},p=l(`<h1 id="pkill" tabindex="-1">pkill <a class="header-anchor" href="#pkill" aria-hidden="true">#</a></h1><p>可以按照进程名杀死进程</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>pkill命令</strong> 可以按照进程名杀死进程。pkill和killall应用方法差不多，也是直接杀死运行中的程序；如果您想杀掉单个进程，请用kill来杀掉。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pkill(选项</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-o：仅向找到的最小（起始）进程号发送信号；</span></span>
<span class="line"><span style="color:#FFCB6B;">-n：仅向找到的最大（结束）进程号发送信号；</span></span>
<span class="line"><span style="color:#FFCB6B;">-P：指定父进程号发送信号；</span></span>
<span class="line"><span style="color:#FFCB6B;">-g：指定进程组；</span></span>
<span class="line"><span style="color:#FFCB6B;">-t：指定开启进程的终端。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>进程名称：指定要查找的进程名称，同时也支持类似grep指令中的匹配模式。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">pgrep</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-l</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">gaim</span></span>
<span class="line"><span style="color:#F78C6C;">2979</span><span style="color:#EEFFFF;"> gaim</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">pkill</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">gaim</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>也就是说：kill对应的是PID，pkill对应的是command。</p>`,13),i=[p];function r(t,c,o,d,h,u){return n(),a("div",null,i)}const b=s(e,[["render",r]]);export{m as __pageData,b as default};
