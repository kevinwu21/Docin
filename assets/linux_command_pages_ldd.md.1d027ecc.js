import{_ as e,c as s,o as a,a as n}from"./app.82736834.js";const b=JSON.parse('{"title":"ldd","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"其他介绍","slug":"其他介绍","link":"#其他介绍","children":[]}]}],"relativePath":"linux/command/pages/ldd.md","lastUpdated":1666509709000}'),l={name:"linux/command/pages/ldd.md"},d=n(`<h1 id="ldd" tabindex="-1">ldd <a class="header-anchor" href="#ldd" aria-hidden="true">#</a></h1><p>打印程序或者库文件所依赖的共享库列表</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>ldd命令</strong> 用于打印程序或者库文件所依赖的共享库列表。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ldd(选项</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">--version：打印指令版本号；</span></span>
<span class="line"><span style="color:#FFCB6B;">-v：详细信息模式，打印所有相关信息；</span></span>
<span class="line"><span style="color:#FFCB6B;">-u：打印未使用的直接依赖；</span></span>
<span class="line"><span style="color:#FFCB6B;">-d：执行重定位和报告任何丢失的对象；</span></span>
<span class="line"><span style="color:#FFCB6B;">-r：执行数据对象和函数的重定位，并且报告任何丢失的对象和函数；</span></span>
<span class="line"><span style="color:#FFCB6B;">--help：显示帮助信息。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>文件：指定可执行程序或者文库。</p><h3 id="其他介绍" tabindex="-1">其他介绍 <a class="header-anchor" href="#其他介绍" aria-hidden="true">#</a></h3><p>首先ldd不是一个可执行程序，而只是一个shell脚本</p><p>ldd能够显示可执行模块的dependency，其原理是通过设置一系列的环境变量，如下：<code>LD_TRACE_LOADED_OBJECTS、LD_WARN、LD_BIND_NOW、LD_LIBRARY_VERSION、LD_VERBOSE</code>等。当<code>LD_TRACE_LOADED_OBJECTS</code>环境变量不为空时，任何可执行程序在运行时，它都会只显示模块的dependency，而程序并不真正执行。要不你可以在shell终端测试一下，如下：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#EEFFFF;"> LD_TRACE_LOADED_OBJECTS</span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再执行任何的程序，如ls等，看看程序的运行结果。</p><p>ldd显示可执行模块的dependency的工作原理，<a href="http://xn--ld-linux-tj6mw25ffs0axz1hjehg7a.so" target="_blank" rel="noreferrer">其实质是通过ld-linux.so</a>（elf动态库的装载器）来实现的。我们知道，ld-linux.so模块会先于executable模块程序工作，并获得控制权，因此当上述的那些环境变量被设置时，ld-linux.so选择了显示可执行模块的dependency。</p><p>实际上可以直接执行ld-linux.so模块，如：<code>/lib/ld-linux.so.2 --list program</code>（这相当于ldd program）</p>`,17),r=[d];function p(i,t,c,o,h,u){return a(),s("div",null,r)}const m=e(l,[["render",p]]);export{b as __pageData,m as default};
