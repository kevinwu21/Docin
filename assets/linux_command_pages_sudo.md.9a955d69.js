import{_ as s,c as a,o as n,a as l}from"./app.82736834.js";const u=JSON.parse('{"title":"sudo","description":"","frontmatter":{},"headers":[{"level":2,"title":"补充说明","slug":"补充说明","link":"#补充说明","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"选项","slug":"选项","link":"#选项","children":[]},{"level":3,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":3,"title":"实例","slug":"实例","link":"#实例","children":[]}]}],"relativePath":"linux/command/pages/sudo.md","lastUpdated":1666509709000}'),e={name:"linux/command/pages/sudo.md"},p=l(`<h1 id="sudo" tabindex="-1">sudo <a class="header-anchor" href="#sudo" aria-hidden="true">#</a></h1><p>以其他身份来执行命令</p><h2 id="补充说明" tabindex="-1">补充说明 <a class="header-anchor" href="#补充说明" aria-hidden="true">#</a></h2><p><strong>sudo命令</strong> 用来以其他身份来执行命令，预设的身份为root。在<code>/etc/sudoers</code>中设置了可执行sudo指令的用户。若其未经授权的用户企图使用sudo，则会发出警告的邮件给管理员。用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">sudo(选项</span><span style="color:#EEFFFF;">)</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">参数</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="选项" tabindex="-1">选项 <a class="header-anchor" href="#选项" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">-b：在后台执行指令；</span></span>
<span class="line"><span style="color:#FFCB6B;">-E：继承当前环境变量</span></span>
<span class="line"><span style="color:#FFCB6B;">-h：显示帮助；</span></span>
<span class="line"><span style="color:#FFCB6B;">-H：将HOME环境变量设为新身份的HOME环境变量；</span></span>
<span class="line"><span style="color:#FFCB6B;">-k：结束密码的有效期限，也就是下次再执行sudo时便需要输入密码；。</span></span>
<span class="line"><span style="color:#FFCB6B;">-l：列出目前用户可执行与无法执行的指令；</span></span>
<span class="line"><span style="color:#FFCB6B;">-p：改变询问密码的提示符号；</span></span>
<span class="line"><span style="color:#FFCB6B;">-s&lt;shell&gt;：执行指定的shell；</span></span>
<span class="line"><span style="color:#FFCB6B;">-u&lt;用户&gt;：以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份；</span></span>
<span class="line"><span style="color:#FFCB6B;">-v：延长密码有效期限5分钟；</span></span>
<span class="line"><span style="color:#FFCB6B;">-V</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">：显示版本信息。</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-hidden="true">#</a></h3><p>指令：需要运行的指令和对应的参数。</p><h3 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">su</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-</span></span>
<span class="line"><span style="color:#545454;font-style:italic;"># env | grep -E &#39;(HOME|SHELL|USER|LOGNAME|^PATH|PWD|TEST_ETC|TEST_ZSH|TEST_PRO|TEST_BASH|TEST_HOME|SUDO)&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这个命令相当于使用root超级用户重新登录一次shell，只不过密码是使用的当前用户的密码。而且重要是，该命令会 <strong>重新加载/etc/profile文件以及/etc/bashrc文件等系统配置文件，并且还会重新加载root用户的$SHELL环境变量所对应的配置文件</strong> ，比如：root超级用户的$SHELL是/bin/bash，则会加载/root/.bashrc等配置。如果是/bin/zsh，则会加载/root/.zshrc等配置，执行后是完全的root环境。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-i</span></span>
<span class="line"><span style="color:#545454;font-style:italic;"># env | grep -E &#39;(HOME|SHELL|USER|LOGNAME|^PATH|PWD|TEST_ETC|TEST_ZSH|TEST_PRO|TEST_BASH|TEST_HOME|SUDO)&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这个命令基本与 <code>sudo su -</code> 相同，执行后也是root超级用户的环境，只不过是多了一些当前用户的信息。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">$</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">sudo</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">-s</span></span>
<span class="line"><span style="color:#545454;font-style:italic;"># env|grep -E &#39;(HOME|SHELL|USER|LOGNAME|^PATH|PWD|TEST_ETC|TEST_ZSH|TEST_PRO|TEST_BASH|TEST_HOME|SUDO)&#39;  --color</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>这个命令相当于 <strong>以当前用户的$SHELL开启了一个root超级用户的no-login的shell，不会加载/etc/profile等系统配置</strong> 。所以/etc/profile文件中定义的TEST_ETC环境变量就看不到了，但是会<strong>加载root用户对应的配置文件</strong>，比如root用户的$SHELL是/bin/zsh，那么会加载/root/.zshrc配置文件，执行完后，不会切换当前用户的目录。</p><p>配置sudo必须通过编辑<code>/etc/sudoers</code>文件，而且只有超级用户才可以修改它，还必须使用visudo编辑。之所以使用visudo有两个原因，一是它能够防止两个用户同时修改它；二是它也能进行有限的语法检查。所以，即使只有你一个超级用户，你也最好用visudo来检查一下语法。</p><p>visudo默认的是在vi里打开配置文件，用vi来修改文件。我们可以在编译时修改这个默认项。visudo不会擅自保存带有语法错误的配置文件，它会提示你出现的问题，并询问该如何处理，就像：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#EEFFFF;">&gt;&gt;&gt; </span><span style="color:#FFCB6B;">sudoers</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">file:</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">syntax</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">error,</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">line</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">22</span><span style="color:#EEFFFF;"> &lt;&lt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>此时我们有三种选择：键入“e”是重新编辑，键入“x”是不保存退出，键入“Q”是退出并保存。如果真选择Q，那么sudo将不会再运行，直到错误被纠正。</p><p>现在，我们一起来看一下神秘的配置文件，学一下如何编写它。让我们从一个简单的例子开始：让用户Foobar可以通过sudo执行所有root可执行的命令。以root身份用visudo打开配置文件，可以看到类似下面几行：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#545454;font-style:italic;"># Runas alias specification</span></span>
<span class="line"><span style="color:#545454;font-style:italic;"># User privilege specificationroot    ALL=(ALL)ALL</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>我们一看就明白个差不多了，root有所有权限，只要仿照现有root的例子就行，我们在下面加一行（最好用tab作为空白）：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">ALL=</span><span style="color:#EEFFFF;">(</span><span style="color:#C3E88D;">ALL</span><span style="color:#EEFFFF;">)    ALL</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>保存退出后，切换到foobar用户，我们用它的身份执行命令：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ ls /root</span></span>
<span class="line"><span style="color:#FFCB6B;">ls:</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/root:</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">权限不够</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo ls /root</span></span>
<span class="line"><span style="color:#FFCB6B;">PassWord:</span></span>
<span class="line"><span style="color:#FFCB6B;">anaconda-ks.cfg</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">Desktop</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">install.log</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">install.log.syslog</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>好了，我们限制一下foobar的权利，不让他为所欲为。比如我们只想让他像root那样使用ls和ifconfig，把那一行改为：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">localhost=</span><span style="color:#EEFFFF;">    </span><span style="color:#C3E88D;">/sbin/ifconfig,</span><span style="color:#EEFFFF;">   </span><span style="color:#C3E88D;">/bin/ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再来执行命令：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo head -</span><span style="color:#F78C6C;">5</span><span style="color:#EEFFFF;"> /etc/shadow</span></span>
<span class="line"><span style="color:#FFCB6B;">Password:</span></span>
<span class="line"><span style="color:#FFCB6B;">Sorry,</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">user</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">is</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">not</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">allowed</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">to</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">execute</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/usr/bin/head -5 /etc/shadow</span><span style="color:#89DDFF;">&#39;</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">as</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">root</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">on</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">localhost.localdomain.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo /sbin/ifconfigeth0      Linkencap:Ethernet HWaddr </span><span style="color:#F78C6C;">00</span><span style="color:#EEFFFF;">:</span><span style="color:#F78C6C;">14</span><span style="color:#EEFFFF;">:</span><span style="color:#F78C6C;">85</span><span style="color:#EEFFFF;">:EC:E9:9B...</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>现在让我们来看一下那三个ALL到底是什么意思。第一个ALL是指网络中的主机，我们后面把它改成了主机名，它指明foobar可以在此主机上执行后面的命令。第二个括号里的ALL是指目标用户，也就是以谁的身份去执行命令。最后一个ALL当然就是指命令名了。例如，我们想让foobar用户在linux主机上以jimmy或rene的身份执行kill命令，这样编写配置文件：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">foobar</span><span style="color:#EEFFFF;">    </span><span style="color:#C3E88D;">linux=</span><span style="color:#EEFFFF;">(</span><span style="color:#C3E88D;">jimmy,rene</span><span style="color:#EEFFFF;">)    /bin/kill</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>但这还有个问题，foobar到底以jimmy还是rene的身份执行？这时我们应该想到了<code>sudo -u</code>了，它正是用在这种时候。 foobar可以使用<code>sudo -u jimmy kill PID</code>或者<code>sudo -u rene kill PID</code>，但这样挺麻烦，其实我们可以不必每次加<code>-u</code>，把rene或jimmy设为默认的目标用户即可。再在上面加一行：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Defaults:foobar</span><span style="color:#EEFFFF;">    </span><span style="color:#C3E88D;">runas_default=rene</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Defaults后面如果有冒号，是对后面用户的默认，如果没有，则是对所有用户的默认。就像配置文件中自带的一行：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Defaults</span><span style="color:#EEFFFF;">    </span><span style="color:#C3E88D;">env_reset</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>另一个问题是，很多时候，我们本来就登录了，每次使用sudo还要输入密码就显得烦琐了。我们可不可以不再输入密码呢？当然可以，我们这样修改配置文件：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">localhost=NOPASSWD:</span><span style="color:#EEFFFF;">     </span><span style="color:#C3E88D;">/bin/cat,</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/bin/ls</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再来sudo一下：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo ls /rootanaconda-ks.cfg Desktop install.log</span></span>
<span class="line"><span style="color:#FFCB6B;">install.log.syslog</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>当然，你也可以说“某些命令用户foobar不可以运行”，通过使用!操作符，但这不是一个好主意。因为，用!操作符来从ALL中“剔出”一些命令一般是没什么效果的，一个用户完全可以把那个命令拷贝到别的地方，换一个名字后再来运行。</p><p><strong>日志与安全</strong></p><p>sudo为安全考虑得很周到，不仅可以记录日志，还能在有必要时向系统管理员报告。但是，sudo的日志功能不是自动的，必须由管理员开启。这样来做：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">touch</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/var/log/sudo</span></span>
<span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/etc/syslog.conf</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在syslog.conf最后面加一行（必须用tab分割开）并保存：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">local2.debug</span><span style="color:#EEFFFF;">                    </span><span style="color:#C3E88D;">/var/log/sudo</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>重启日志守候进程，</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">ps</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">aux</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">grep</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">syslogd</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>把得到的syslogd进程的PID（输出的第二列是PID）填入下面：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">kill</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">–HUP</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">PID</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，sudo就可以写日志了：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo ls /rootanaconda-ks.cfg</span></span>
<span class="line"><span style="color:#FFCB6B;">Desktop</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">install.log</span></span>
<span class="line"><span style="color:#FFCB6B;">install.log.syslog</span></span>
<span class="line"><span style="color:#EEFFFF;">$cat /var/log/sudoJul </span><span style="color:#F78C6C;">28</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">22</span><span style="color:#EEFFFF;">:</span><span style="color:#F78C6C;">52</span><span style="color:#EEFFFF;">:</span><span style="color:#F78C6C;">54</span><span style="color:#EEFFFF;"> localhost sudo:   foobar :</span></span>
<span class="line"><span style="color:#EEFFFF;">TTY</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">pts/</span><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> pwd</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/home/foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> USER</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">root</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> command</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/bin/ls</span><span style="color:#EEFFFF;"> /root</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>不过，有一个小小的“缺陷”，sudo记录日志并不是很忠实：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo cat /etc/shadow </span><span style="color:#89DDFF;">&gt;</span><span style="color:#EEFFFF;"> /dev/null</span></span>
<span class="line"><span style="color:#FFCB6B;">cat</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">/var/log/sudo...Jul</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">28</span><span style="color:#EEFFFF;"> </span><span style="color:#F78C6C;">23</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">10</span><span style="color:#C3E88D;">:</span><span style="color:#F78C6C;">24</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">localhost</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">sudo:</span><span style="color:#EEFFFF;">   </span><span style="color:#C3E88D;">foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">:</span><span style="color:#EEFFFF;"> </span><span style="color:#C3E88D;">TTY=pts/</span><span style="color:#F78C6C;">1</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#EEFFFF;">PWD</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/home/foobar</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> USER</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">root</span><span style="color:#EEFFFF;"> </span><span style="color:#89DDFF;">;</span><span style="color:#EEFFFF;"> COMMAND</span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;">/bin/cat</span><span style="color:#EEFFFF;"> /etc/shadow</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>重定向没有被记录在案！为什么？因为在命令运行之前，shell把重定向的工作做完了，sudo根本就没看到重定向。这也有个好处，下面的手段不会得逞：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-darker" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#EEFFFF;">foobar@localhost </span><span style="color:#89DDFF;">~]</span><span style="color:#EEFFFF;">$ sudo ls /root </span><span style="color:#89DDFF;">&gt;</span><span style="color:#EEFFFF;"> /etc/shadowbash: /etc/shadow: 权限不够</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>sudo 有自己的方式来保护安全。以root的身份执行<code>sudo-V</code>，查看一下sudo的设置。因为考虑到安全问题，一部分环境变量并没有传递给sudo后面的命令，或者被检查后再传递的，比如：PATH，HOME，SHELL等。当然，你也可以通过sudoers来配置这些环境变量。</p>`,58),o=[p];function r(c,t,F,i,d,E){return n(),a("div",null,o)}const b=s(e,[["render",r]]);export{u as __pageData,b as default};
